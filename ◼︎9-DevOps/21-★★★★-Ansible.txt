配置管理系统旨在使管理员和操作团队能够轻松地控制大量服务器。它们允许您从一个中心位置以自动方式控制许多不同的系统。虽然有许多流行的配置管理系统可用于Linux系统，如Chef和Puppet，但这些系统通常比许多人想要或需要的更复杂。Ansible是一个伟大的选择这些选项，因为它有一个更小的开销开始。

一个不同和优点是我们不需要在节点中安装任何客户端。它使用SSH来和节点进行通信。





* Ansible 服务端 – hostname:artemis.dbs.wx.com ( 192.168.56.211 ) 
* 节点: hostname:apollo.dbs.wx.com ( 192.168.56.212 ) 
* 节点: hostname:uranus.dbs.wx.com ( 192.168.56.213 )





❗️❗️ Ansible中文权威指南 ❗️❗️
http://ansible-tran.readthedocs.io/en/latest/docs/intro_installation.html



⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️------⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️
⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️------⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️

🔸 Mac 安装 Ansible
  很多安装方法. 可以用 brew 也可以用 pip.  最好是用 pip...  

  ⦿ Brew 安装
    brew install ansible
    🍺  /usr/local/Cellar/ansible/2.3.1.0: 11,346 files, 124.3MB

  ⦿ pip 安装
    sudo easy_install pip
    sudo pip install ansible


🔸 配置

  sudo mkdir /etc/ansible 
  sudo vi /etc/ansible/hosts

    [vpses]
    vps1 ansible_ssh_host=23.105.192.96 ansible_ssh_port=2222 ansible_ssh_user=root
    vps2 ansible_ssh_host=104.224.139.45 ansible_ssh_port=2222 ansible_ssh_user=root



  /etc下新建ansible文件夹. 然后新建 hosts 这个配置文件.
  [vpses]                是组名.随意取 
  vps1 vps2              是主机名. 随意取
  ansible_ssh_host       指定服务器 ip
  ansible_ssh_port=2222  指定服务器ssh 端口
  ansible_ssh_user      指定服务器ssh 用户



🔸 使用

  ⦿ 基础用法
    ansible -m ping all         所有主机
    ansible -m ping vpses       指定一个组
    ansible -m ping vps1        指定单个主机  
    ansible -m ping vps1:vps2   指定多个主机


    ansible -m shell -a 'free -m' host1
    例如，要找出我们的host1机器上的内存使用情况，我们可以使用：




⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️------⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️
⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️------⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️
🔸 安装
 vps2 Centos7 安装 Ansible 
  yum install epel-release
  yum install ansible -y
  ansible --version



🔸 密钥配置.
  让vps2 可以ssh vps1.

  ⦿ 密钥生成 
    ssh-keygen 回车.
    默认私钥路径: /root/.ssh/id_rsa
    默认公钥路径: /root/.ssh/id_rsa.pub

  ⦿ 密钥上传
    把vps2上的公钥 传给 vps1
    scp -P 2222 -r /root/.ssh/id_rsa.pub root@23.105.192.96:~/.ssh/

  ⦿ vps1 authorized_keys
    cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys
    /etc/init.d/sshd restart


🔸 节点清单
  如果ssh 改过端口. 需要在IP后面加上 端口.

  vi /etc/ansible/hosts

  [dbservers]
  23.105.192.96:2222


🔸 测试
  ✘✘∙𝒗2 ~ ➜ ansible -m ping 'dbservers'
  23.105.192.96 | SUCCESS => {
      "changed": false,
      "ping": "pong"
  }

出现上面的字 就说明成功了...



🔸 用户
默认情况下，Ansible会尝试使用当前用户名连接到远程主机。如果该用户在远程系统上不存在，连接尝试将导致此错误：


sudo mkdir /etc/ansible/group_vars
sudo nano /etc/ansible/group_vars/servers
---
ansible_ssh_user: sammy



🔸 基本使用

⦿ 检查Ansible节点的运行时间（uptime):
ansible -m command -a "uptime" 'dbservers'


⦿ 检查节点的内核版本
ansible -m command -a "uname -r" 'dbservers'


⦿ 给节点增加用户
ansible -m command -a "useradd david" 'dbservers'



⦿ 重定向输出到文件中
ansible -m command -a "df -Th" 'dbservers' > /tmp/command-output.txt

 cat /tmp/command-output.txt




⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️------⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️
⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️------⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️
absible 自动装系统...





